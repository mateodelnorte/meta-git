#!/usr/bin/env node

const assertUsage = require('../lib/assertUsage');
const fs = require('fs');
const program = require('commander');
const debug = require('debug')('meta-git-remote');
const metaLoop = require('meta-loop');
const path = require('path');
const util = require('util');

// TODO: refactor to standard usage parser, where you can paste in the usage from the wrapped command and it will both output meta usage when given --help and also intelligently
// compare given syntax against known wrapped command usage to display --help when an incorrect command is given
const usage = `
usage: meta git remote [-v | --verbose]
   or: meta git remote add [-t <branch>] [-m <master>] [-f] [--tags | --no-tags] [--mirror=<fetch|push>] <name> <url>
   or: meta git remote rename <old> <new>
   or: meta git remote remove <name>
   or: meta git remote set-head <name> (-a | --auto | -d | --delete | <branch>)
   or: meta git remote [-v | --verbose] show [-n] <name>
   or: meta git remote prune [-n | --dry-run] <name>
   or: meta git remote [-v | --verbose] update [-p | --prune] [(<group> | <remote>)...]
   or: meta git remote set-branches [--add] <name> <branch>...
   or: meta git remote get-url [--push] [--all] <name>
   or: meta git remote set-url [--push] <name> <newurl> [<oldurl>]
   or: meta git remote set-url --add <name> <newurl>
   or: meta git remote set-url --delete <name> <url>

    -v, --verbose         be verbose; must be placed before a subcommand`;

if ( ! assertUsage('meta git remote', usage)) return console.log(usage);

metaLoop(`git remote ${process.argv.slice(2).join(' ')}`);
